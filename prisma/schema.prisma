// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  tasks     Task[]
  budgets   Budget[]
  streak    Int      @default(0)
  lastActiveDate DateTime?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  status      String   @default("PENDING")
  type        String   @default("GENERAL")
  userId      String   @db.ObjectId
  start       DateTime
  end         DateTime?
  user        User     @relation(fields: [userId], references: [id])
  isDeleted   Boolean?  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Budget {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  month       Int          // 1-12 for January-December
  year        Int
  totalBudget Float
  userId      String       @db.ObjectId
  user        User         @relation(fields: [userId], references: [id])
  items       BudgetItem[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  
  @@unique([userId, month, year])
}

model BudgetItem {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  category    String
  budgetAmount Float
  spentAmount  Float    @default(0)
  budgetId    String   @db.ObjectId
  budget      Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

